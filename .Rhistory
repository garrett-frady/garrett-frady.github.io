make publications
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm1, 100)
# necessary package to read in data
library(readxl)
library(dplyr)
library(knitr)
############################### Data setup #####################################
library(readxl) # necessary package to read in .xlsx file
# read in the data
dat1 <- read_xlsx("FPL Consolidated Trial Data_update.xlsx", sheet = 1,
na = "NA")
dat1 <- janitor::clean_names(dat1)
# add an additional column denoting success as a binary variable; 0 = failure and 1 = success
dat1$success.bin <- ifelse(dat1$success=="yes", 1, 0)
#------------------------------------------------------------------------------#
# Generalized Linear Mixed Effects Models - Success as Binary Response Variable #
# in this section, we fit logistic regression models with trial_type, path, ...
# ... and the interaction between trial_type and path as fixed effects; we ...
# ... also include participant_number as a random effects term.
##### Fit the models #####
library(glmmTMB) # linear and generalized mixed-effects models (with extensions)
library(dplyr) # package to use piping for data manipulation
# Experiment 1
glmm1 <- glmmTMB(success.bin ~ trial_type*path + (1|participant_number),
data = dat1 %>% filter(experiment==1),
family = binomial)
# Experiment 2
glmm2 <- glmmTMB(success.bin ~ trial_type*path + (1|participant_number),
data = dat1 %>% filter(experiment==2),
family = binomial)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm1, 100)
# check posterior predictive power
check_posterior_predictions(glmm1, 100)
check_posterior_predictions(glmm1, 100)
check_posterior_predictions(glmm1, 100)
# check posterior predictive power
check_posterior_predictions(glmm1, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
library(performance)
# check posterior predictive power
check_posterior_predictions(glmm2, 100)
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
library(rmarkdown)
.libPaths()
var(c(-1, 4, 3, 11, -24, -5))
sd(c(-1, 4, 3, 11, -24, -5))
-22/12
